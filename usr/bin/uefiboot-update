#!/bin/bash
# Setup default cofinuration values 

# Read root mounting line from /etc/fstab
ROOT_LINE="$(sed '/^#.*/d;/ \/ /!d' /etc/fstab)"

ROOT="$(echo $ROOT_LINE | sed 's/\s.*//')"
OPTIONS="ro quiet"
if [[ $ROOT_LINE == *"subvol"* ]]
then
  ROOT_FLAGS="rootflags=$(echo $ROOT_LINE | sed 's/^.*\(subvol\S\+\).*$/\1/')"
else
  ROOT_FLAGS=""
fi
K_SUFFIX=""
DISTRIB=$(lsb_release -i -s)
DISTRIB_ID="$(lsb_release -r -s) $(lsb_release -c -s)"
EFI_DISK="/dev/sda" 
EFI_PARTITION=$(gdisk -l $EFI_DISK | sed -n "s/\s*\([0-9]\+\).*\sEF00\s.*/\1/p")

# Read the config file if it exists
if [ -e /etc/uefiboot.conf ]
then
  source /etc/uefiboot.conf
fi

# Read command line options
while [ -n "$1" ] 
do
  case "$1" in
    -l) DISTRIB="$2"
        shift;;
    -i) DISTRIB_ID="$2"
        shift;;
    -d) EFI_DISK="$2"
        # find EFS partioion number on specified disk
        EFI_PARTITION=$(gdisk -l $EFI_DISK | sed -n "s/\s*\([0-9]\+\).*\sEF00\s.*/\1/p")
        shift;;
    -p) EFI_PARTITION="$2"
        shift;;
    -o) OPTIONS="$2"
        shift;;
    -s) K_SUFFIX="$2"
        shift;;
    -r) ROOT="$2"
        shift;;
  esac
  shift
done


# Remove all old boot options from UEFI boot menu.
for OPT in $(efibootmgr | sed "/Boot[0-9].*$DISTRIB/!d;s/Boot//;s/\*.*//")
do
  efibootmgr -Bb$OPT >/dev/null
done

# Add new boot options according to installed kernels.
echo "Updating UEFI boot options"
# Sort kernel version from older (first) to latest (last). It is imoprtant
# as last added options will be first option in booting order.
for KVER in $(ls /boot/vmlinuz*generic | sed 's/\/boot\/vmlinuz-//' | sort)
do
  echo -n "Kernel vmlinuz-$KVER found"
  efibootmgr -c -d $EFI_DISK -p $EFI_PARTITION -l vmlinuz-$KVER$K_SUFFIX -L "$DISTRIB $DISTRIB_ID $KVER" -u "root=$ROOT $ROOT_FLAGS $OPTIONS initrd=initrd.img-$KVER" >/dev/null
  echo " ... added"
done
